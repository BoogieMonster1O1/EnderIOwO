plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		url "https://maven.shedaniel.me"
		content {
			includeGroup "me.shedaniel.cloth.api"
			includeGroup "me.sargunvohra.mcmods"
			includeGroup "me.shedaniel.cloth"
			includeGroup "me.shedaniel"
		}
	}
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
		content {
			includeGroup "io.github.onyxstudios"
			includeGroup "io.github.onyxstudios.Cardinal-Components-API"
		}
	}

	maven {
		url 'https://maven.blamejared.com'
		content {
			includeGroup "vazkii.patchouli"
		}
	}


	maven { 
		url "https://bai.jfrog.io/artifactory/maven" 
		content {
			includeGroup "mcp.mobius.waila"
		}
	}

	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
		content {
			includeGroup "alexiil.mc.lib"
		}
	}

	maven {
		url "https://maven.terraformersmc.com"
		content {
			includeGroup "com.terraformersmc"
		}
	}

	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
		content {
			includeGroup "io.github.cottonmc"
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_components_version}"
	include "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_components_version}"

	modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
	include "vazkii.patchouli:Patchouli:${project.patchouli_version}"

	modApi "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"
	modApi "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"
	include "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"
	include "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"

	modImplementation "mcp.mobius.waila:wthit-api:fabric-${project.hwyla_version}"
	modRuntime "mcp.mobius.waila:wthit-api:fabric-${project.hwyla_version}"

	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "curse.maven:architectury-fabric-419697:${project.architectury_file}"
	modImplementation "curse.maven:kubejs-395864:${project.kubejs_file}"
	modRuntime "curse.maven:rhino-416294:${project.rhino_file}"

	modImplementation "alexiil.mc.lib:libblockattributes-core:${project.lba_version}"
	modImplementation "alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}"
	modImplementation "alexiil.mc.lib:libblockattributes-items:${project.lba_version}"
	include "alexiil.mc.lib:libblockattributes-core:${project.lba_version}"
	include "alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}"
	include "alexiil.mc.lib:libblockattributes-items:${project.lba_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
